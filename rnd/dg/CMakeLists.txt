cmake_minimum_required(VERSION 3.8)

Project(dg)
include(FetchContent)

# ------ amgcl
FetchContent_Declare(
	amgcl
	GIT_REPOSITORY https://github.com/ddemidov/amgcl
	GIT_TAG 1.4.2
)
FetchContent_GetProperties(amgcl)
if(NOT amgcl_POPULATED)
	FetchContent_Populate(amgcl)
endif()
include_directories(${amgcl_SOURCE_DIR})

# ------- ghc
FetchContent_Declare(
	ghc
	GIT_REPOSITORY https://github.com/gulrak/filesystem
	GIT_TAG v1.5.14
)
FetchContent_GetProperties(ghc)
if(NOT ghc_POPULATED)
	FetchContent_Populate(ghc)
endif()
include_directories(${ghc_SOURCE_DIR}/include)

# -------- Boost
#set(BOOST_ROOT /home/ek/Build/boost_1_80_0)
find_package(Boost REQUIRED)
include_directories(${BOOST_ROOT})
include_directories(${Boost_INCLUDE_DIRS})

# -------- catch 2
#include_directories("${CMAKE_SOURCE_DIR}/../bloodflow/prog24/extern/catch2")
# Catch framework
include(FetchContent)
FetchContent_Declare(
  catch
  GIT_REPOSITORY https://github.com/catchorg/Catch2.git
  GIT_TAG        v2.13.10
)
FetchContent_GetProperties(catch)
if(NOT catch_POPULATED)
  FetchContent_Populate(catch)
  add_subdirectory(${catch_SOURCE_DIR} ${catch_BINARY_DIR})
endif()
set(CATCH2_FRAMEWORK "Catch2::Catch2")

set (SRC
	main.cpp
	mat.cpp
	vtk.cpp
	test_fe_integration.cpp
	test_transport_equation.cpp
)
set (HEADERS
	common.hpp
	common_test.hpp
	fem_element.hpp
	mat.hpp
	vtk.hpp
)
# build all binaries to build/bin
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

add_executable(dg ${SRC} ${HEADERS})
target_link_libraries(dg PRIVATE ${CATCH2_FRAMEWORK})

